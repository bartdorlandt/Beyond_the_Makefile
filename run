#!/usr/bin/env bash
# https://www.youtube.com/watch?v=SdmYd5hJISM&t=42s

set -o errexit
set -o pipefail

# minus sign: use default if unset
VERSION="${VERSION:-latest}"
IMAGE="${IMAGE:-tmp_test_image}"
PLATFORM="${PLATFORM:-linux/amd64}"

# If we're running in CI we need to disable docker_compose_tty allocation for docker compose
# commands that enable it by default, such as exec and run.
docker_compose_tty=""
docker_run_tty="-it"
if [[ ! -t 1 ]]; then
  docker_compose_tty="-T"
  docker_run_tty=""
fi

# Souce the .env file
# Explanations -a is equivalent to allexport. In other words, every variable assignment in the shell is exported into the environment (to be used by multiple child processes).
# http://gnu.org/software/bash/manual/html_node/The-Set-Builtin.html
set -a
. ./.env
set +a


# -----------------------------------------------------------------------------
# Helper functions start with _ and aren't listed in this script's help menu.
# -----------------------------------------------------------------------------
function _echo_run {
  echo "$1"
  $(echo "$1")
}

function _envfile_present() {
  if [[ -e .env ]]; then
    echo "--env-file .env"
  else
    echo ""
  fi
}

# -----------------------------------------------------------------------------
function build {
    docker buildx build -f Dockerfile -t ${IMAGE}:${VERSION} --platform ${PLATFORM} .
}

function run {
    _echo_run "docker run --rm ${IMAGE}:${VERSION}"
}

function run:multiple {
  run
  run
  run
  run
  run
}

function print {
    echo "Variable print. Var1: $VAR1, Var2: $VAR2"
}

function help {
  printf "%s <task> [args]\n\nTasks:\n" "${0}"

  compgen -A function | grep -v "^_" | cat -n

  printf "\nExtended help:\n  Each task has comments for general usage\n"
}

# This idea is heavily inspired by: https://github.com/adriancooney/Taskfile
TIMEFORMAT=$'\nTask completed in %3lR'
time "${@:-help}"